{"version":3,"sources":["vorton.ts"],"names":["Vorton","Vorton.isDescendantOrSame","Vorton.isEmptyNode","Vorton.eachRangeTextNode","Vorton.eachRangeTextNode.processTextNodeRange","Vorton.eachRangeTextNode.splitBreadthRange","Vorton.eachRangeTextNode.deeperRange","Vorton.eachRangeTextNode.processRange","Vorton.highlight"],"mappings":"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","file":"vorton.js","sourcesContent":["module Vorton {\n\n  function isDescendantOrSame(child, parent) {\n    var node = child;\n    while (node != null) {\n      if (node == parent) {\n        return true;\n      }\n      node = node.parentNode;\n    }\n    return false;\n  }\n\n  function isEmptyNode(node: Node) {\n    return !node.textContent.trim().length;\n  }\n\n\n  function eachRangeTextNode(range: Range, fn: Function) {\n\n    function processTextNodeRange(range: Range) {\n\n      var textNode: Text = <Text>range.startContainer;\n      var splittedTextNode = textNode\n        .splitText(range.startOffset)\n        .splitText(range.endOffset)\n        .previousSibling;\n\n      fn(splittedTextNode);\n      range.startContainer.parentNode.normalize();\n    }\n\n    function splitBreadthRange(range: Range) {\n\n      var leftRange = document.createRange();\n      var rightRange = document.createRange();\n\n      leftRange.setStart(range.startContainer, 0);\n\n      if (range.startContainer.nodeType === Node.TEXT_NODE) {\n        leftRange.setEnd(range.startContainer, range.startContainer.textContent.length);\n      }\n      else {\n        leftRange.setEnd(range.startContainer, 0);\n      }\n\n      rightRange.setStart(range.startContainer.nextSibling, 0);\n      rightRange.setEnd(range.endContainer, range.endOffset);\n\n      processRange(leftRange);\n      processRange(rightRange);\n    }\n\n    function deeperRange(range: Range) {\n\n      var nextRange = document.createRange();\n      nextRange.setStart(range.startContainer.firstChild, 0);\n\n      if (range.startContainer === range.endContainer) {\n        var endContainer = range.startContainer.lastChild;\n\n        nextRange.setEnd(endContainer,\n          endContainer.nodeType === Node.TEXT_NODE ?\n            endContainer.textContent.length : 0);\n      }\n      else {\n        nextRange.setEnd(range.endContainer, range.endOffset);\n      }\n\n      processRange(nextRange);\n    }\n\n    function processRange(range: Range) {\n\n      if (range.startContainer === range.endContainer\n        && range.startContainer.nodeType === Node.TEXT_NODE) {\n        processTextNodeRange(range);\n      }\n      else if (isDescendantOrSame(range.endContainer, range.startContainer)) {\n        deeperRange(range);\n      }\n      else {\n        splitBreadthRange(range);\n      }\n    }\n\n    processRange(range);\n  }\n\n\n  export function highlight(range: Range, className: string) {\n\n    eachRangeTextNode(range, function(node: Text) {\n\n      if (!isEmptyNode(node)) {\n        var wrapper = document.createElement('SPAN');\n        node.parentNode.insertBefore(wrapper, node);\n        wrapper.className = className;\n        wrapper.appendChild(node);\n      }\n\n    });\n\n  }\n\n}\n"],"sourceRoot":"/source/"}